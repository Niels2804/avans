@page "/Niels"
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject IMeasurementRepository measurementRepository

<PageTitle>Niels Jansen</PageTitle>

<header>   
    <h1 class="assignment">Opdrachtvariant H</h1>
    <p>
        In onderstaande grafiek kunt u zien of een bepaald huishouden op een goedkoop of duur moment stroom verbruikt. De rode lijn geeft 
        de gemiddelde en dynamische prijs weer. De groene lijn toont of het gemiddelde huishouden op een goedkoop of duur moment 
        elektriciteit verbruikt. Tot slot geeft de blauwe lijn het elektriciteitsverbruik van het door u geselecteerde huishouden aan.
    </p>
    <p><b>naam: </b>Niels Jansen</p>
    <p><b>klas: </b>230ICTVTE2</p>
</header>
<main>
    <table>
        <td><b>Huidige prijs per kWh</b> €</td>
        <td class="optionMenu">
            <h2>Huishouden</h2>
            <div class="dropdown show">
                <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Huishouden:
                </a>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" href="?household=EC2AAB">EC2AAB</a>
                    <a class="dropdown-item" href="?household=1078608">1078608</a>
                </div>
            </div>
        </td>
         <td class="optionMenu">
            <h2>Huishouden</h2>
            <div class="dropdown show">
                <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Tijd
                </a>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" href="?time=day">1 dag</a>
                    <a class="dropdown-item" href="?time=day">30 dagen</a>
                </div>
            </div>
        </td>
    </table>
    <LineChart @ref="lineChart" />
</main>
<footer>
    <h2 class="legend">Legenda:</h2>
    <ul>
        <li>Dynamische energieprijs: €</li>
        <li>Huishouden</li>
        <li>Gemiddelde huishouden</li>
    </ul>
</footer>

@code {
    private List<Measurement>? measurements;
    private LineChart lineChart = default!;
    
    protected override async Task OnInitializedAsync() {
        measurements = await this.measurementRepository.GetEnergyConsumed(0xEC2AAB, 30, "20s");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RenderWormAsync();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task RenderWormAsync()
    {
        List<string> dataLabels = new List<string>();
        
        try {
            if(measurements == null) {
                Console.WriteLine("Something went wrong while trying to get energy data");
            } else {
                for (int i = 0; i < measurements.Count; i++) {
                    dataLabels.Add((i + 1).ToString());
                };
            }
        } catch (Exception e) {
            Console.WriteLine(e);
        }

        var data = new ChartData
            {
                Labels = dataLabels,
                Datasets = new List<IChartDataset>()
                {
                    new LineChartDataset()
                    {
                        Label = "India",
                        Data = new List<double?>{ 9, 20, 29, 33, 50, 66, 75, 86, 91, 105, 120, 126, 141, 150, 156, 164, 177, 180, 184, 195 },
                        BackgroundColor = "rgb(88, 80, 141)",
                        BorderColor = "rgb(88, 80, 141)",
                        BorderWidth = 2,
                        HoverBorderWidth = 4,
                        //PointBackgroundColor = "rgb(88, 80, 141)",
                        //PointBorderColor = "rgb(88, 80, 141)",
                        //PointRadius = 0, // hide points
                        //PointHoverRadius = 4,
                    },
                    new LineChartDataset()
                    {
                        Label = "England",
                        Data = new List<double?>{ 1, 1, 8, 19, 24, 26, 39, 47, 56, 66, 75, 88, 95, 100, 109, 114, 124, 129, 140, 142 },
                        BackgroundColor = "rgb(255, 166, 0)",
                        BorderColor = "rgb(255, 166, 0)",
                        BorderWidth = 2,
                        HoverBorderWidth = 4,
                        // PointBackgroundColor = "rgb(255, 166, 0)",
                        // PointBorderColor = "rgb(255, 166, 0)",
                        // PointRadius = 0, // hide points
                        // PointHoverRadius = 4,
                    }
                }
            };

        var options = new LineChartOptions();

        options.Interaction.Mode = InteractionMode.Index;

        options.Plugins.Title!.Text = "Dynamische Energieprijzen";
        options.Plugins.Title.Display = true;
        options.Plugins.Title.Font = new ChartFont { Size = 30 };

        options.Responsive = true;

        options.Scales.X!.Title = new ChartAxesTitle { Text = "Datum", Display = true };
        options.Scales.Y!.Title = new ChartAxesTitle { Text = "Valuta = EURO (€)", Display = true };

        await lineChart.InitializeAsync(data, options);
    }
}